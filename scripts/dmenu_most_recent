#!/usr/bin/env php
<?php

function get_indexed_cache(array $cached) {
    $indexed = array();
    foreach ($cached as $file) {
        if ($file) {
            $parts = explode('@', $file);
            $indexed[$parts[0]] = intval($parts[1]);
        }
    }
    return $indexed;
}
$cache = realpath($_SERVER['HOME'] . '/' . (isset($argv[1]) ? $argv[1] : '.dmenu_recent_cache'));
// read from stdin
$fd = fopen("php://stdin", "r");
$data = '';
while (!feof($fd)) {
    $data .= fread($fd, 1024);
}
fclose($fd);

$files = array();
if ($data) {
    if (!file_exists($cache)) {
        touch($cache);
    }
    $indexed = get_indexed_cache(explode(PHP_EOL, file_get_contents($cache)));

    $files = explode(PHP_EOL, $data);
    usort($files, function($a, $b) use (&$indexed) {
        if (isset($indexed[$a]) && isset($indexed[$b])) {
            return $indexed[$b] - $indexed[$a];
        } elseif (isset($indexed[$a])) {
            return -1;
        } elseif (isset($indexed[$b])) {
            return 1;
        }
        return 0;
    });
}

die(implode(PHP_EOL, $files));

